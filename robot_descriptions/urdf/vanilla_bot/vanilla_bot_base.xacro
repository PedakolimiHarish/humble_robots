<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    
    <!-- Parameters for mobile base -->
    <xacro:property name="base_length" value ="0.1"/>
    <xacro:property name="base_radius" value ="0.8"/>

    <!-- Parameters for mobile base wheels -->
    <xacro:property name="wheel_radius" value ="0.18"/>
    <xacro:property name="wheel_length" value ="0.05"/>

    <!-- Parameters for mobile base caster wheels -->
    <xacro:property name="caster_wheel_radius" value ="0.07"/>
    <xacro:property name="caster_wheel_length" value ="${((base_length / 2) * 2)+(wheel_radius)}"/>

    <!--  Parameters for IMU -->
    <xacro:imu  link_name = "imu_link" parent_link = "base_link" joint_name = "imu_joint"
                xyz="0.0 0.0 ${base_length/2}" rpy="0.0 0.0 0.0" />
    
    <!--  Parameters for Camera -->
    <xacro:camera link_name = "camera_link" parent_link = "base_link" joint_name = "camera_joint"
                  camera_length = "0.02" camera_width = "0.1" camera_height = "${base_length}" mass = "0.01"
                  xyz = "${base_radius} 0 ${base_length/2}" rpy = "0 0 0" />

    <!--  Parameters for Laser Sensor -->
    <xacro:laser link_name = "laser_link" parent_link = "base_link" joint_name = "laser_joint"
                  laser_radius = "0.05" laser_length = "0.1" mass = "0.01"
                  xyz = "0 0 ${base_length + 0.1}" rpy = "0 0 0" /> <!-- Add laser_length to the xyz in int like 0.1 -->

    <!-- Parameters for Diff_drive Plugin -->
    <xacro:diff_drive left_joint_name = "base_left_wheel_joint" right_joint_name = "base_right_wheel_joint" robot_base_frame = "base_footprint"
                                        wheel_diameter = "${wheel_radius*2}" wheel_separation = "${base_radius*2}" />



<!-- ********************** Base footprint link and joint ********************** -->
    <link name="base_footprint"/>

    <joint name="base_joint" type="fixed">
        <origin xyz="0.0 0.0 ${caster_wheel_length}" rpy="0.0 0.0 0.0"/>
        <parent link="base_footprint"/>
        <child link="base_link"/>
    </joint>


<!-- ********************** Base link ********************** -->
    <link name="base_link">

        <visual>
            <origin xyz="0.0 0.0 ${(base_length / 2)}" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${base_radius}" length="${base_length}"/>
            </geometry>
            <material name="Blue"/>
        </visual>

        <collision>
            <origin xyz="0.0 0.0 ${(base_length / 2)}" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${base_radius}" length="${base_length}"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertia mass="1.0" radius="${base_radius}" height="${base_length}" 
                                    xyz="0 0 ${base_length/2}" rpy="0 0 ${pi / 2.0}" />
    </link>

    <gazebo reference="base_link">
        <material>Gazebo/Blue</material>
    </gazebo>


<!-- ********************** Wheel links and joints ********************** -->
    <xacro:macro name="wheel_link" params="prefix">
        <link name="${prefix}_wheel_link">

            <visual>
                <origin xyz="0 0 0" rpy="${pi / 2.0} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <material name="Grey" />
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${pi / 2.0} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
            </collision>

            <xacro:cylinder_inertia mass="0.05" radius="${wheel_radius}" height="${wheel_length}" 
                                    xyz="0 0 0" rpy="${pi / 2.0} 0 0" />
        </link>
    </xacro:macro>

    <!-- Right  -->
    <xacro:wheel_link prefix="right" />

    <joint name="base_right_wheel_joint" type="continuous">
        <origin xyz="0.0 ${(base_radius)+(wheel_length / 2)} ${-((base_length / 2) * 2)}" 
                rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="right_wheel_link"/>
        <axis xyz="0.0 1 0.0"/>
    </joint>

    <gazebo reference="right_wheel_link">
        <material>Gazebo/Grey</material>
    </gazebo>

    <!-- Left -->
    <xacro:wheel_link prefix="left" />

    <joint name="base_left_wheel_joint" type="continuous">
        <origin xyz="0.0 ${-((base_radius)+(wheel_length / 2))} ${-((base_length / 2) * 2)}" 
                rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <axis xyz="0.0 1 0.0"/>
    </joint>

    <gazebo reference="left_wheel_link">
        <material>Gazebo/Grey</material>
    </gazebo>


<!-- ********************** caster wheel links and joints ********************** -->
    <xacro:macro name="caster_wheel_link" params="prefix">
        <link name="${prefix}_caster_wheel_link">

            <visual name="caster_wheel_handel">
                <origin xyz="0.0 0.0 ${-((caster_wheel_length-caster_wheel_radius)/2)}" 
                        rpy="0.0 0.0 0.0"/>
                <geometry>
                    <cylinder radius="${caster_wheel_radius}" length="${caster_wheel_length - caster_wheel_radius}"/>
                </geometry>
            </visual>

            <visual name="caster_wheel">
                <origin xyz="0.0 0.0 ${-((caster_wheel_length/2)*2)+caster_wheel_radius}" 
                        rpy="0.0 0.0 0.0"/>
                <geometry>
                    <sphere radius="${caster_wheel_radius}"/>
                </geometry>
            </visual>

            <collision>
                <origin xyz="0.0 0.0 ${-((caster_wheel_length)/2)}" rpy="0.0 0.0 0.0"/>
                <geometry>
                    <cylinder radius="${caster_wheel_radius}" length="${caster_wheel_length}"/>
                </geometry>
            </collision>

            <xacro:cylinder_inertia mass="0.04" radius="${caster_wheel_radius}" height="${caster_wheel_length}" 
                                    xyz="0 0 ${-((caster_wheel_length-caster_wheel_radius)/2)}" 
                                    rpy="0 0 0" />

        </link>
    </xacro:macro>

    <!-- Front -->
    <xacro:caster_wheel_link prefix="front" />

    <joint name="front_caster_wheel_joint" type="fixed">
        <origin xyz="${base_radius-0.1} 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="front_caster_wheel_link"/>
    </joint>

    <gazebo reference="front_caster_wheel_link">
        <material>Gazebo/Grey</material>
        <mu1 value="0.1" />
        <mu2 value="0.1" />
    </gazebo>

    <!-- Back -->
    <xacro:caster_wheel_link prefix="back" />

    <joint name="back_caster_wheel_joint" type="fixed">
        <origin xyz="${-(base_radius-0.1)} 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="back_caster_wheel_link"/>
    </joint>

    <gazebo reference="back_caster_wheel_link">
        <material>Gazebo/Grey</material>
        <mu1 value="0.1" />
        <mu2 value="0.1" />
    </gazebo>

</robot>